{"ast":null,"code":"var _jsxFileName = \"/home/flora/mygithub/le-flora-colored-button/src/components/ColoredButton.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport ColoredLink from './ColoredLink';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c = ButtonContainer;\nconst ButtonStyle = styled.button`\n  background-color: ${_ref => {\n  let {\n    colorValue\n  } = _ref;\n  return colorValue !== '' ? `#${colorValue}` : 'white';\n}};\n  height: 30px;\n  width: fit-content;\n  margin: auto;\n  border-radius: 15px;\n`;\n_c2 = ButtonStyle;\nconst ColoredText = styled.span`\n  color: ${_ref2 => {\n  let {\n    colorValue\n  } = _ref2;\n  return colorValue !== '' ? `#${colorValue}` : 'black';\n}};\n`;\n_c3 = ColoredText;\n\nfunction ColoredButton() {\n  _s();\n\n  const [colorValue, setColorValue] = useState('white');\n  const [name, setName] = useState('Nice name');\n  const [hiddenColorValue, setHiddenColorValue] = useState(false);\n\n  const handleClickBtn = e => {\n    console.log('change color');\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    setColorValue(randomColor);\n    setName(e.target.getAttribute('name'));\n    setHiddenColorValue(true);\n  };\n\n  const handleBlur = e => {\n    console.log('hide color val');\n    setHiddenColorValue(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonStyle, {\n      onClick: handleClickBtn,\n      colorValue: colorValue,\n      name: name,\n      onBlur: handleBlur,\n      children: \"Change my color !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), hiddenColorValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"My name : \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"My \", /*#__PURE__*/_jsxDEV(ColoredText, {\n          colorValue: colorValue,\n          children: \"color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this), \" : #\", colorValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ColoredLink, {\n      colorValue: colorValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColoredButton, \"lCKHtwZ0VPjBC9CtkOm+4a2y+Hw=\");\n\n_c4 = ColoredButton;\nexport default ColoredButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"ButtonStyle\");\n$RefreshReg$(_c3, \"ColoredText\");\n$RefreshReg$(_c4, \"ColoredButton\");","map":{"version":3,"sources":["/home/flora/mygithub/le-flora-colored-button/src/components/ColoredButton.jsx"],"names":["styled","useState","ColoredLink","ButtonContainer","div","ButtonStyle","button","colorValue","ColoredText","span","ColoredButton","setColorValue","name","setName","hiddenColorValue","setHiddenColorValue","handleClickBtn","e","console","log","randomColor","Math","floor","random","toString","target","getAttribute","handleBlur"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA,CAJA;KAAMD,e;AAMN,MAAME,WAAW,GAAGL,MAAM,CAACM,MAAO;AAClC,sBAAsB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAClBA,UAAU,KAAK,EAAf,GAAqB,IAAGA,UAAW,EAAnC,GAAuC,OADrB;AAAA,CAC6B;AACnD;AACA;AACA;AACA;AACA,CAPA;MAAMF,W;AASN,MAAMG,WAAW,GAAGR,MAAM,CAACS,IAAK;AAChC,WAAW;AAAA,MAAC;AAAEF,IAAAA;AAAF,GAAD;AAAA,SACPA,UAAU,KAAK,EAAf,GAAqB,IAAGA,UAAW,EAAnC,GAAuC,OADhC;AAAA,CACwC;AACnD,CAHA;MAAMC,W;;AAKN,SAASE,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACH,UAAD,EAAaI,aAAb,IAA8BV,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,WAAD,CAAhC;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMe,cAAc,GAAIC,CAAD,IAAO;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAlB;AAEAb,IAAAA,aAAa,CAACS,WAAD,CAAb;AACAP,IAAAA,OAAO,CAACI,CAAC,CAACQ,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAD,CAAP;AAEAX,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GARD;;AAUA,QAAMY,UAAU,GAAIV,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAJ,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAHD;;AAKA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,OAAO,EAAEC,cADX;AAEE,MAAA,UAAU,EAAET,UAFd;AAGE,MAAA,IAAI,EAAEK,IAHR;AAIE,MAAA,MAAM,EAAEe,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGb,gBAAgB,iBACf;AAAA,8BACE;AAAA,iCAAcF,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,uCACK,QAAC,WAAD;AAAa,UAAA,UAAU,EAAEL,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,UAEGA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAoBE,QAAC,WAAD;AAAa,MAAA,UAAU,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5CQG,a;;MAAAA,a;AA8CT,eAAeA,aAAf","sourcesContent":["import styled from 'styled-components'\nimport { useState } from 'react'\n\nimport ColoredLink from './ColoredLink'\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst ButtonStyle = styled.button`\n  background-color: ${({ colorValue }) =>\n    colorValue !== '' ? `#${colorValue}` : 'white'};\n  height: 30px;\n  width: fit-content;\n  margin: auto;\n  border-radius: 15px;\n`\n\nconst ColoredText = styled.span`\n  color: ${({ colorValue }) =>\n    colorValue !== '' ? `#${colorValue}` : 'black'};\n`\n\nfunction ColoredButton() {\n  const [colorValue, setColorValue] = useState('white')\n  const [name, setName] = useState('Nice name')\n  const [hiddenColorValue, setHiddenColorValue] = useState(false)\n\n  const handleClickBtn = (e) => {\n    console.log('change color')\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16)\n\n    setColorValue(randomColor)\n    setName(e.target.getAttribute('name'))\n\n    setHiddenColorValue(true)\n  }\n\n  const handleBlur = (e) => {\n    console.log('hide color val')\n    setHiddenColorValue(false)\n  }\n\n  return (\n    <ButtonContainer>\n      <ButtonStyle\n        onClick={handleClickBtn}\n        colorValue={colorValue}\n        name={name}\n        onBlur={handleBlur}\n      >\n        Change my color !\n      </ButtonStyle>\n\n      {hiddenColorValue && (\n        <div>\n          <p>My name : {name}</p>\n          <p>\n            My <ColoredText colorValue={colorValue}>color</ColoredText> : #\n            {colorValue}\n          </p>\n        </div>\n      )}\n\n      <ColoredLink colorValue={colorValue}></ColoredLink>\n    </ButtonContainer>\n  )\n}\n\nexport default ColoredButton\n"]},"metadata":{},"sourceType":"module"}