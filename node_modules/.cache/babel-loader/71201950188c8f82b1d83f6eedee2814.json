{"ast":null,"code":"var _jsxFileName = \"/home/flora/mygithub/le-flora-colored-button/src/components/ColoredButton.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonStyle = styled.button`\n  background-color: ${_ref => {\n  let {\n    colorValue\n  } = _ref;\n  return colorValue !== '' ? `#${colorValue}` : 'white';\n}};\n`;\n_c = ButtonStyle;\n\nfunction ColoredButton() {\n  _s();\n\n  const [colorValue, setColorValue] = useState('white');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonStyle, {\n      onClick: () => {\n        console.log('change color');\n        let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n        setColorValue(randomColor);\n      },\n      colorValue: colorValue,\n      children: \"Change my color !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"My color : \", colorValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColoredButton, \"dkQq2FXYReu/eynDPnWljq3hVP0=\");\n\n_c2 = ColoredButton;\nexport default ColoredButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonStyle\");\n$RefreshReg$(_c2, \"ColoredButton\");","map":{"version":3,"sources":["/home/flora/mygithub/le-flora-colored-button/src/components/ColoredButton.jsx"],"names":["styled","useState","ButtonStyle","button","colorValue","ColoredButton","setColorValue","console","log","randomColor","Math","floor","random","toString"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,MAAO;AAClC,sBAAsB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAClBA,UAAU,KAAK,EAAf,GAAqB,IAAGA,UAAW,EAAnC,GAAuC,OADrB;AAAA,CAC6B;AACnD,CAHA;KAAMF,W;;AAKN,SAASG,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACD,UAAD,EAAaE,aAAb,IAA8BL,QAAQ,CAAC,OAAD,CAA5C;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbM,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAlB;AAEAP,QAAAA,aAAa,CAACG,WAAD,CAAb;AACD,OANH;AAOE,MAAA,UAAU,EAAEL,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA,gCAAeA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApBQC,a;;MAAAA,a;AAsBT,eAAeA,aAAf","sourcesContent":["import styled from 'styled-components'\nimport { useState } from 'react'\n\nconst ButtonStyle = styled.button`\n  background-color: ${({ colorValue }) =>\n    colorValue !== '' ? `#${colorValue}` : 'white'};\n`\n\nfunction ColoredButton() {\n  const [colorValue, setColorValue] = useState('white')\n\n  return (\n    <div>\n      <ButtonStyle\n        onClick={() => {\n          console.log('change color')\n          let randomColor = Math.floor(Math.random() * 16777215).toString(16)\n\n          setColorValue(randomColor)\n        }}\n        colorValue={colorValue}\n      >\n        Change my color !\n      </ButtonStyle>\n\n      <p>My color : {colorValue}</p>\n    </div>\n  )\n}\n\nexport default ColoredButton\n"]},"metadata":{},"sourceType":"module"}