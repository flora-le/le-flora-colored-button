{"ast":null,"code":"var _jsxFileName = \"/home/flora/mygithub/le-flora-colored-button/src/components/ColoredButton.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TitleStyle = styled.h1`\n  color: 'Blue';\n  text-align: center;\n`;\n_c = TitleStyle;\nconst ButtonStyle = styled.button`\n  background-color: ${_ref => {\n  let {\n    colorValue\n  } = _ref;\n  return colorValue !== '' ? `#${colorValue}` : 'white';\n}};\n`;\n_c2 = ButtonStyle;\nconst LinkStyle = styled.a`\n  text-decoration: none;\n  color: ${_ref2 => {\n  let {\n    colorValue\n  } = _ref2;\n  return colorValue !== '' ? `#${colorValue}` : 'white';\n}};\n  &:focus,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none !important;\n    color: ${_ref3 => {\n  let {\n    colorValue\n  } = _ref3;\n  return colorValue !== '' ? `#${colorValue}` : 'white';\n}};\n  }\n  &: hover {\n    text-decoration: underline !important;\n    color: 'green' !important;\n  }\n`;\n_c3 = LinkStyle;\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a:first-of-type {\n    margin: 20px;\n  }\n`;\n_c4 = LinkWrapper;\n\nfunction ColoredButton() {\n  _s();\n\n  const [colorValue, setColorValue] = useState('white');\n  const [name, setName] = useState('Nice name');\n  const [hiddenColorValue, setHiddenColorValue] = useState(false);\n\n  const handleClickBtn = e => {\n    console.log('change color');\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    setColorValue(randomColor);\n    setName(e.target.getAttribute('name'));\n    setHiddenColorValue(true);\n  };\n\n  const handleBlur = e => {\n    console.log('hide color val');\n    setHiddenColorValue(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleStyle, {\n      children: \"My colored button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n      onClick: handleClickBtn,\n      colorValue: colorValue,\n      name: name,\n      onBlur: handleBlur,\n      children: \"Change my color !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), hiddenColorValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"My name : \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"My color : #\", colorValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinkWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(LinkStyle, {\n        href: \"https://flora-le.github.io/la-maison-jungle/\",\n        colorValue: colorValue,\n        children: \"Plants over here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinkStyle, {\n        href: \"https://flora-le.github.io/shiny-agency/\",\n        children: \"Shiny Agency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColoredButton, \"lCKHtwZ0VPjBC9CtkOm+4a2y+Hw=\");\n\n_c5 = ColoredButton;\nexport default ColoredButton;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TitleStyle\");\n$RefreshReg$(_c2, \"ButtonStyle\");\n$RefreshReg$(_c3, \"LinkStyle\");\n$RefreshReg$(_c4, \"LinkWrapper\");\n$RefreshReg$(_c5, \"ColoredButton\");","map":{"version":3,"sources":["/home/flora/mygithub/le-flora-colored-button/src/components/ColoredButton.jsx"],"names":["styled","useState","TitleStyle","h1","ButtonStyle","button","colorValue","LinkStyle","a","LinkWrapper","div","ColoredButton","setColorValue","name","setName","hiddenColorValue","setHiddenColorValue","handleClickBtn","e","console","log","randomColor","Math","floor","random","toString","target","getAttribute","handleBlur"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { useState } from 'react'\n\nconst TitleStyle = styled.h1`\n  color: 'Blue';\n  text-align: center;\n`\nconst ButtonStyle = styled.button`\n  background-color: ${({ colorValue }) =>\n    colorValue !== '' ? `#${colorValue}` : 'white'};\n`\nconst LinkStyle = styled.a`\n  text-decoration: none;\n  color: ${({ colorValue }) =>\n    colorValue !== '' ? `#${colorValue}` : 'white'};\n  &:focus,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none !important;\n    color: ${({ colorValue }) =>\n      colorValue !== '' ? `#${colorValue}` : 'white'};\n  }\n  &: hover {\n    text-decoration: underline !important;\n    color: 'green' !important;\n  }\n`\n\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a:first-of-type {\n    margin: 20px;\n  }\n`\n\nfunction ColoredButton() {\n  const [colorValue, setColorValue] = useState('white')\n  const [name, setName] = useState('Nice name')\n  const [hiddenColorValue, setHiddenColorValue] = useState(false)\n\n  const handleClickBtn = (e) => {\n    console.log('change color')\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16)\n\n    setColorValue(randomColor)\n    setName(e.target.getAttribute('name'))\n\n    setHiddenColorValue(true)\n  }\n\n  const handleBlur = (e) => {\n    console.log('hide color val')\n    setHiddenColorValue(false)\n  }\n\n  return (\n    <div>\n      <TitleStyle>My colored button</TitleStyle>\n      <ButtonStyle\n        onClick={handleClickBtn}\n        colorValue={colorValue}\n        name={name}\n        onBlur={handleBlur}\n      >\n        Change my color !\n      </ButtonStyle>\n\n      {hiddenColorValue && (\n        <div>\n          <p>My name : {name}</p>\n          <p>My color : #{colorValue}</p>\n        </div>\n      )}\n      <LinkWrapper>\n        <LinkStyle\n          href=\"https://flora-le.github.io/la-maison-jungle/\"\n          colorValue={colorValue}\n        >\n          Plants over here\n        </LinkStyle>\n        <LinkStyle href=\"https://flora-le.github.io/shiny-agency/\">\n          Shiny Agency\n        </LinkStyle>\n      </LinkWrapper>\n    </div>\n  )\n}\n\nexport default ColoredButton\n"]},"metadata":{},"sourceType":"module"}